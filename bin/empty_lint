#!/bin/bash

# Script to clean empty lines in Java files
# Removes spaces and tabs from lines that contain only whitespace

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Function to clean empty lines in a single file
clean_file() {
    local file="$1"
    local temp_file="${file}.tmp"

    # Check if file has lines with only whitespace
    if grep -q '^[ \t]\+$' "$file" 2>/dev/null; then
        print_info "Cleaning empty lines in: $file"

        # Count lines before cleaning
        local lines_before=$(grep -c '^[ \t]\+$' "$file" 2>/dev/null || echo "0")

        # Use sed to replace lines with only whitespace with completely empty lines
        sed 's/^[ \t]*$//' "$file" > "$temp_file"

        # Replace original file with cleaned version
        mv "$temp_file" "$file"

        print_info "  → Fixed $lines_before empty lines with whitespace"
    else
        print_info "No whitespace-only lines found in: $file"
    fi
}

# Function to find and clean all Java files
clean_java_files() {
    local search_dir="${1:-.}"
    local file_count=0
    local cleaned_count=0

    print_info "Searching for Java files in: $search_dir"

    # Find all .java files recursively, excluding target directories
    while IFS= read -r -d '' file; do
        ((file_count++))

        # Check if file has whitespace-only lines
        if grep -q '^[ \t]\+$' "$file" 2>/dev/null; then
            clean_file "$file"
            ((cleaned_count++))
        fi

    done < <(find "$search_dir" -name "target" -type d -prune -o -name "*.java" -type f -print0)

    print_info "Summary:"
    print_info "  → Total Java files found: $file_count"
    print_info "  → Files cleaned: $cleaned_count"
    print_info "  → Files already clean: $((file_count - cleaned_count))"
}

# Function to show usage
show_usage() {
    echo "Usage: $0 [OPTIONS] [DIRECTORY]"
    echo ""
    echo "Clean empty lines in Java files by removing whitespace from blank lines."
    echo "Recursively searches for .java files while skipping 'target' directories."
    echo ""
    echo "OPTIONS:"
    echo "  -h, --help     Show this help message"
    echo ""
    echo "ARGUMENTS:"
    echo "  DIRECTORY      Directory to search for Java files (default: current directory)"
    echo ""
    echo "Examples:"
    echo "  $0                           # Clean all Java files in current directory"
    echo "  $0 src/main/java            # Clean Java files in specific directory"
}

# Main script logic
main() {
    local search_dir="."

    # Parse command line arguments
    while [[ $# -gt 0 ]]; do
        case $1 in
            -h|--help)
                show_usage
                exit 0
                ;;
            -*)
                print_error "Unknown option: $1"
                show_usage
                exit 1
                ;;
            *)
                search_dir="$1"
                shift
                ;;
        esac
    done

    # Validate directory
    if [[ ! -d "$search_dir" ]]; then
        print_error "Directory not found: $search_dir"
        exit 1
    fi

    clean_java_files "$search_dir"
}

# Run main function with all arguments
main "$@"
