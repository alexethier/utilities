#!/bin/bash
# Prototype script that will quickly find file types in cwd based on matching expression.
# Has options for copying matched files to target destination
# Will remember the last match expression used

set -e

# Defaults
EXPRESSION=""
FILE_FILTER=" -type f "
COPY=false
COPY_LOCATION=""
REMOTE=false
REMOTE_LOCATION="" # An full scp command where the characters '{}' will be replaced by the filename.
DELETE=false

while [[ $# > 0 ]]
do
    key="$1"
    value="$2"

    # If arguments come in the form a=b
    if [[ $1 == *'='* ]]
    then
        IFS='=' read -ra key_pair <<< "$1"
        key="${key_pair[0]}"
        value="${key_pair[1]}"
    fi

    case $key in
        -e)
            EXPRESSION="$value"
            shift
            ;;
        --expression)
            EXPRESSION="$value"
            shift
            ;;
        -c)
            COPY="true"
            COPY_LOCATION=$value
            last_char="${COPY_LOCATION: -1}"
            while [ "$last_char" == "/" ] || [ "$last_char" == " " ]; do
              COPY_LOCATION=${COPY_LOCATION::-1}
              last_char="${COPY_LOCATION: -1}"
            done
            if [ -n "$COPY_LOCATION" ]; then
              shift
            fi
            ;;
        --copy)
            COPY="true"
            COPY_LOCATION="$value"
            if [ ! -n "$COPY_LOCATION" ]; then
              shift
            fi
            ;;
        -r)
            REMOTE="true"
            REMOTE_LOCATION="$value"
            if [ -n "$REMOTE_LOCATION" ]; then
              shift
            fi
            ;;
        --remote)
            REMOTE="true"
            REMOTE_LOCATION="$value"
            if [ ! -n "$REMOTE_LOCATION" ]; then
              shift
            fi
            ;;
        -d)
            DELETE=true
            ;;
        --delete)
            DELETE=true
            ;;
        --no-filter)
            FILE_FILTER=""
            ;;
        *)
            echo "Unknown option passed: $key"
            exit 1
            ;;
    esac
    shift
done

if [ -f ~/.aetmp/findr.txt ]; then
    if [ ! -n "$EXPRESSION" ]; then
        EXPRESSION=`cat ~/.aetmp/findr.txt | grep "EXPRESSION" | cut -d '=' -f2`
    fi

    if [[ "$COPY" == "true" && ! -n "$COPY_LOCATION" ]]; then
        COPY_LOCATION=`cat ~/.aetmp/findr.txt | grep "COPY_LOCATION" | cut -d '=' -f2`
    fi
    if [[ "$REMOTE" == "true" && ! -n "$REMOTE_LOCATION" ]]; then
        REMOTE_LOCATION=`cat ~/.aetmp/findr.txt | grep "REMOTE_LOCATION" | cut -d '=' -f2`
    fi
fi

if [[ "$REMOTE" == true && "$REMOTE_LOCATION" != *"{}"* ]]; then
  echo "Remote command: $REMOTE_LOCATION must contain '{}' substitution characters."
  exit 1
fi

if [ ! -n "$EXPRESSION" ]; then
  echo "Unable to determine expression"
  exit 1
fi

mkdir -p ~/.aetmp
echo "EXPRESSION=$EXPRESSION" > ~/.aetmp/findr.txt
if [ ! -n "$COPY_LOCATION" ]; then
  echo "COPY_LOCATION=$COPY_LOCATION" >> ~/.aetmp/findr.txt
fi
if [ ! -n "$REMOTE_LOCATION" ]; then
  echo "REMOTE_LOCATION=$REMOTE_LOCATION" >> ~/.aetmp/findr.txt
fi

if [[ "$COPY" == "true" && ! -n "$COPY_LOCATION" ]]; then
  echo "Copy specified but no copy location"
  exit 1
fi

if [[ "$REMOTE" == "true" && ! -n "$REMOTE_LOCATION" ]]; then
  echo "Remote copy specified but no remote location"
  exit 1
fi

FILES=`find . $FILE_FILTER | grep -e $EXPRESSION`

print=true

if [ "$COPY" == "true" ]; then
  for file in $FILES; do
    eval "/bin/bash -cx \"cp $file $COPY_LOCATION/\""
  done
  print=false
fi

if [ "$REMOTE" == "true" ]; then
  for file in $FILES; do
    remote_command=`echo "$REMOTE_LOCATION" | sed "s|{}|$file|g"`
    eval "/bin/bash -cx \"${remote_command}\""
  done
  print=false
fi

if [ "$DELETE" == "true" ]; then
  for file in $FILES; do
    eval "/bin/bash -cx \"rm -f $file\""
  done
  print=false
fi

if [ "$print" == "true" ]; then
  for file in $FILES; do
    echo "$file"
  done
fi
