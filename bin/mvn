#!/bin/bash
#
# Maven Wrapper Script
# 
# This script provides convenient Maven build commands with different optimization levels:
#
# Usage:
#   mvn [command] [additional maven args]
#
# Commands:
#   fast    - Fast build with all non-essential plugins disabled (tests, style checks, etc.)
#   style   - Style-focused build with code quality checks but tests disabled
#   safe    - Safe build that copies current directory to temp location and runs ./mvnw clean install
#   [none]  - Passes all arguments directly to the Maven command ($M2_HOME/bin/mvn)

set -e

# Generic function to get original command path (bypassing wrapper scripts)
get_original_command() {
    local cmd="$1"
    if [ -z "$cmd" ]; then
        echo "Error: command name required" >&2
        return 1
    fi
    
    local original_path="$PATH"
    local script_dir=$(dirname "$0")
    PATH=$(echo "$PATH" | sed "s|:$script_dir||g" | sed "s|^$script_dir:||g")
    local cmd_path=$(command -v "$cmd")
    PATH="$original_path"
    echo "$cmd_path"
}

# Get the original mvn command
MVN_COMMAND=$(get_original_command "mvn")

# Help function
show_help() {
    cat << EOF
Maven Wrapper Script

This script provides convenient Maven build commands with different optimization levels.

Commands:
    fast                    - Fast build with all non-essential plugins disabled
                              (tests, style checks, spotbugs, pmd, enforcer, rat, javadoc)
    style                   - Style-focused build with code quality checks but tests disabled
                              (runs checkstyle, spotbugs, pmd but skips tests and javadoc)
    safe                    - Safe build that copies current directory to temp location
                              and runs a full build ./mvnw clean install (requires pom.xml and mvnw)
    help, -h, --help        - Show this help message
    [none]                  - Passes all arguments directly to Maven

Options:
    All standard Maven options are supported when using direct Maven commands.

Examples:
    mvn fast                - Run fast build
    mvn style               - Run style-focused build
    mvn safe                - Run safe build in temporary directory
    mvn clean install       - Pass through to Maven directly
    mvn -DskipTests install - Pass through to Maven directly

EOF
}

style() {
    # Note: Install (at least package phase) is needed.
    $MVN_COMMAND clean install -T2.0C -DskipTests -Dmaven.javadoc.skip=true -Dmaven.test.skip
}
fast() {
    $MVN_COMMAND clean install -T2.0C -DskipTests -Dspotbugs.skip=true -Dcheckstyle.skip -Dpmd.skip=true -Dmaven.javadoc.skip=true -Dmaven.test.skip -Denforcer.skip=true -Drat.skip=true
}
safe() {
    # Check if pom.xml exists in current directory
    if [ ! -f "pom.xml" ]; then
        echo "Error: pom.xml not found in current directory" >&2
        echo "mvn safe command must be run from a Maven project root directory" >&2
        exit 1
    fi
    
    current_dir=$(pwd)
    tmp_dir=$(mktemp -d)    
    echo "Running in $tmp_dir"
    # Copy all files excluding target directory
    tar -C "$current_dir" --exclude='target' -cf - . | tar -C "$tmp_dir" -xf -
    cd "$tmp_dir"    
    ./mvnw clean install    
    cd "$current_dir"
}

if [[ "$1" == "fast" ]]; then
    fast
elif [[ "$1" == "style" ]]; then
    style
elif [[ "$1" == "safe" ]]; then
    safe
elif [[ "$1" == "help" ]] || [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
    show_help
else
    $MVN_COMMAND "$@"
fi
