#!/bin/bash

# JSON Curl - wrapper around curl to quickly make POST requests with JSON body
# Automatically detects JSON strings vs files and sets appropriate headers

set -e

usage() {
    cat << EOF
Usage: jcurl [OPTIONS] [JSON_DATA] [URL]

Make HTTP POST requests with JSON data using curl.

OPTIONS:
    -u, --url URL          Target URL for the request
    -j, -d, --data JSON    JSON string data to send
    -f, --json_file FILE   JSON file to send
    -v                     Verbose mode (set -x)
    -h, --help             Show this help message

ARGUMENTS:
    JSON_DATA              JSON string or filename (auto-detected)
    URL                    Target URL (if not specified with -u)

EXAMPLES:
    jcurl '{"name":"test"}' http://api.example.com/users
    jcurl -f data.json -u http://api.example.com/users
    jcurl --data '{"id":123}' --url http://api.example.com/update
    jcurl data.json http://api.example.com/users  # Auto-detects file vs string

WORKFLOW:
    1. Automatically detects if input is JSON string or filename
    2. Sets appropriate Content-Type headers
    3. Makes POST request with curl
    4. Returns response from server

EOF
}

# Defaults
ARG1="$1"
ARG2="$2"
NUM_ARGS="$#"

INPUT=""
URL=""
TYPE=""

# Parse command line
while [[ $# > 0 ]]
do
    key="$1"
    value="$2"

    case $key in
        -u|--url)
            URL=$value
            shift
            ;;
        -j|-d|--data|--json_string)
            TYPE="json_string"
            INPUT=$value
            shift
            ;;
        -f|--json_file)
            TYPE="json_file"
            INPUT=$value
            shift
            ;;
        -v)
            set -x
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        *)
            ;;
    esac
    shift
done

if [[ "$URL" == "" && "$INPUT" == "" && "$NUM_ARGS" -eq 2 ]]; then
    INPUT="$ARG1"
    URL="$ARG2"
fi

if [ "$URL" == "" ]; then
    echo "Error: URL is required."
    echo "Use -h or --help for usage information."
    exit 1
fi

if [ "$TYPE" == "" ];then
    TYPE="json_file"

    input_type=`echo $INPUT | jq -r 'type' 2>/dev/null`
    if [[ "$input_type" == "object" || "$input_type" == "array" ]]; then
        TYPE="json_string"
    fi
fi

if [ "$TYPE" == "json_string" ]; then
    curl -H "Content-Type: application/json" -d $INPUT $URL
elif [ "$TYPE" == "json_file" ]; then
    curl -H "Content-Type: application/json" --data-binary "@${INPUT}" $URL
else
    echo "Bad type $TYPE"
    exit 1
fi
