#!/bin/bash

print_help() {
  echo "Configurable options: -s <SSH_SERVER_ACTING_AS_PROXY> -p <TARGET_PORT>"
  echo "Boolean flags: -t <TARGET_HOST or default 127.0.0.1> -d (dev mode or not) -l <LOCAL_PORT>"
}

DEV_MODE="false"
SSH_HOST="" # The ssh server acting as a proxy
TARGET_HOST="127.0.0.1" # The target host sitting behind a firewall
TARGET_HOST_PORT=""
LOCAL_HOST_PORT=""

while [[ $# > 0 ]]
do
    key="$1"
    value="$2"

    case $key in
        -s)
            SSH_HOST=$value
            shift
            ;;
        --ssh)
            SSH_HOST=$value
            shift
            ;;
        -t)
            TARGET_HOST=$value
            shift
            ;;
        --target)
            TARGET_HOST=$value
            shift
            ;;
        -p)
            TARGET_HOST_PORT=$value
            shift
            ;;
        --port)
            TARGET_HOST_PORT=$value
            shift
            ;;
        -l)
            LOCAL_HOST_PORT=$value
            shift
            ;;
        --local-port)
            LOCAL_HOST_PORT=$value
            shift
            ;;
        -d)
            DEV_MODE="true"
            ;;
        --dev)
            DEV_MODE="true"
            ;;
        -h)
            print_help
            exit 1
            ;;
        --help)
            print_help
            exit 1
            ;;
        -v)
            set -x
            ;;
        *)
            echo "Unknown option passed: $key"
            exit 1
            ;;
    esac
    shift
done

if [ "$SSH_HOST" == "" ]; then
  echo "Missing option -s <SSH_HOST>"
  exit 1
fi
if [ "$TARGET_HOST" == "" ]; then
  echo "Missing option -t <TARGET_HOST>"
  exit 1
fi
if [ "$TARGET_HOST_PORT" == "" ]; then
  echo "Missing option -p <TARGET_HOST_PORT>"
  exit 1
fi

if [ "$LOCAL_HOST_PORT" == "" ]; then
  LOCAL_HOST_PORT=$TARGET_HOST_PORT
fi

run_command="ssh -L $LOCAL_HOST_PORT:$TARGET_HOST:$TARGET_HOST_PORT $SSH_HOST -N"
echo "Running command: $run_command"

if [ "$DEV_MODE" == "false" ]; then
  output=`eval $run_command`
fi
