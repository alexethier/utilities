#!/bin/bash
# Highly expiramental script to run commands on multiple SSH hosts

COMMAND=""
COMMAND_USER=""
USER=""
HOSTS=""
SUDO=false
REPLAY=0
PLAN=false

while [[ $# > 0 ]]
do
    key="$1"
    value="$2"

    # If arguments come in the form a=b
    if [[ $1 == *'='* ]]
    then
        IFS='=' read -ra key_pair <<< "$1"
        key="${key_pair[0]}"
        value="${key_pair[1]}"
    fi

    case $key in
        -u)
            USER="$value"
            shift
            ;;
        --user)
            USER="$value"
            shift
            ;;
        -h)
            HOSTS="$value"
            shift
            ;;
        --hosts)
            HOST="$value"
            shift
            ;;
        -s)
            COMMAND_USER="root"
            ;;
        --sudo)
            COMMAND_USER="root"
            ;;
        -r)
            REPLAY="$value"
            shift
            ;;
        --replay)
            REPLAY="$value"
            shift
            ;;
        -p)
            PLAN=true
            ;;
        --plan)
            PLAN=true
            ;;
        *)
            COMMAND="$COMMAND $key"
            ;;
    esac
    shift
done

if [ -f ~/.aetmp/multissh.txt ]; then
    if [ ! -n "$USER" ]; then
        USER=`cat ~/.aetmp/multissh.txt | grep "USER" | cut -d '=' -f2`
    fi
    if [ ! -n "$HOSTS" ]; then
        HOSTS=`cat ~/.aetmp/multissh.txt | grep "HOSTS" | cut -d '=' -f2`
    fi
fi

if [ ! -n "$USER" ]; then
    echo "Unable to determine user"
    exit 1
fi
if [ ! -n "$HOSTS" ]; then
    echo "Unable to determine hosts"
    exit 1
fi

mkdir -p ~/.aetmp
echo "USER=$USER" > ~/.aetmp/multissh.txt
echo "HOSTS=$HOSTS" >> ~/.aetmp/multissh.txt

if [ ! -z "$COMMAND" ];then
  echo $COMMAND >> ~/.aetmp/multissh.commands.txt
  cat ~/.aetmp/multissh.commands.txt | tail -n 100 > ~/.aetmp/multissh.commands.txt.tmp
  mv ~/.aetmp/multissh.commands.txt.tmp ~/.aetmp/multissh.commands.txt
fi

if [ -z "$COMMAND_USER" ]; then
  COMMAND_USER=$USER
fi

HOSTS_ARRAY=`echo $HOSTS | xargs -n 1`

if [ "$REPLAY" -gt 0 ];then

  IFS=$'\n'
  COMMANDS=($(cat ~/.aetmp/multissh.commands.txt | tail -n $REPLAY))
  unset IFS
else
  COMMANDS[0]=$COMMAND
fi

for HOST in $HOSTS; do
  for i in $(echo ${!COMMANDS[@]}); do
    COMMAND="${COMMANDS[$i]}"
    STR_COMMAND="ssh -t $USER@$HOST \"/usr/bin/sudo su -c \\\"$COMMAND\\\" $COMMAND_USER\""
    echo "$STR_COMMAND"
    if [ "$PLAN" = false ]; then
      eval $STR_COMMAND
    fi
  done
done
