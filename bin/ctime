#!/usr/bin/env python3

# This script converts one time zone to another

import pytz
import datetime
import argparse
import sys

ISO_FORMAT = datetime.datetime.now().isoformat()

def convert_datetime_timezone(dt, source_timezone, target_timezone):
    dt = datetime.datetime.strptime(dt,"%Y-%m-%d %H:%M:%S")
    dt = source_timezone.localize(dt)
    dt = dt.astimezone(target_timezone)

    return dt

# Apply time zone parsing that is technically incorrect but correct for my specific usages.
def fuzzy_convert_timezone_string(timezone_str):
  if timezone_str.upper().startswith('Z'):
    return 'Zulu'
  if timezone_str.upper().startswith('E'):
    return 'America/New_York'
  return timezone_str

def parse_timezone_string(timezone_str):
  converted_timezone_string = fuzzy_convert_timezone_string(str(timezone_str))
  return pytz.timezone(converted_timezone_string)

def main():

  parser = argparse.ArgumentParser()
  parser.add_argument("-s","--source", help="Source timezone", default="America/New_York")
  parser.add_argument("-t","--target", help="Target timezone", default="Zulu")
  args = vars(parser.parse_args())

  source_timezone_str = fuzzy_convert_timezone_string(str(args['source']))

  source_timezone = parse_timezone_string(args['source'])
  target_timezone = parse_timezone_string(args['target'])

  for raw_line in sys.stdin:
    line = raw_line.strip()
    target_datetime = convert_datetime_timezone(line, source_timezone, target_timezone)
    print(target_datetime.strftime("%I:%M %p").lstrip('0'))

main()
